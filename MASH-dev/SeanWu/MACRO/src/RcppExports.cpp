// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _MACRO_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// testEventQueue
void testEventQueue();
RcppExport SEXP _MACRO_testEventQueue() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    testEventQueue();
    return R_NilValue;
END_RCPP
}
// testHuman
void testHuman();
RcppExport SEXP _MACRO_testHuman() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    testHuman();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MACRO_rcpp_hello_world", (DL_FUNC) &_MACRO_rcpp_hello_world, 0},
    {"_MACRO_testEventQueue", (DL_FUNC) &_MACRO_testEventQueue, 0},
    {"_MACRO_testHuman", (DL_FUNC) &_MACRO_testHuman, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_MACRO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
